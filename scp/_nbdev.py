# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"threshold_argmax": "nb_analysis.binary.ipynb",
         "youdens_jstats": "nb_analysis.binary.ipynb",
         "performance": "nb_analysis.binary.ipynb",
         "convert_test_df": "nb_inference.general.ipynb",
         "BenchmarkBaseline": "nb_projects.robustness_benchmark.ipynb",
         "Corruption": "nb_projects.robustness_benchmark.ipynb",
         "Perturbation": "nb_projects.robustness_benchmark.ipynb",
         "max_severity": "nb_projects.robustness_benchmark.ipynb",
         "num_frames": "nb_projects.robustness_benchmark.ipynb",
         "classes": "nb_projects.robustness_benchmark.ipynb",
         "bal_error_rate": "nb_projects.robustness_benchmark.ipynb",
         "error_rate": "nb_projects.robustness_benchmark.ipynb",
         "auroc": "nb_projects.robustness_benchmark.ipynb",
         "acc": "nb_projects.robustness_benchmark.ipynb",
         "spec": "nb_projects.robustness_benchmark.ipynb",
         "sens": "nb_projects.robustness_benchmark.ipynb",
         "bal_acc": "nb_projects.robustness_benchmark.ipynb",
         "flip_rate": "nb_projects.robustness_benchmark.ipynb",
         "flip_prob": "nb_projects.robustness_benchmark.ipynb",
         "relative_perf": "nb_projects.robustness_benchmark.ipynb",
         "adjust_by_baseline": "nb_projects.robustness_benchmark.ipynb",
         "score_sam": "nb_projects.robustness_benchmark.ipynb",
         "score_samc": "nb_projects.robustness_benchmark.ipynb",
         "score_samp": "nb_projects.robustness_benchmark.ipynb",
         "save_perf": "nb_projects.robustness_benchmark.ipynb",
         "model_split1": "nb_projects.self_supervised.ipynb",
         "model_split2": "nb_projects.self_supervised.ipynb",
         "ViTClassifier": "nb_projects.self_supervised.ipynb",
         "load_state_dict": "nb_projects.self_supervised.ipynb",
         "get_dino_arch": "nb_projects.self_supervised.ipynb",
         "get_opt_func": "nb_projects.self_supervised.ipynb",
         "downsample_df": "nb_train.balance.ipynb",
         "upsample_df": "nb_train.balance.ipynb",
         "balance_df": "nb_train.balance.ipynb",
         "pp_dls": "nb_train.general.ipynb",
         "SilentRecorder": "nb_train.general.ipynb",
         "MultiFitTensorBoardCallback": "nb_train.general.ipynb",
         "ReduceLROnPlateauNTimes": "nb_train.general.ipynb",
         "sensitivity": "nb_train.metrics.ipynb",
         "specificity": "nb_train.metrics.ipynb",
         "apply_to_vals": "nb_utils.dict.ipynb",
         "remove_key": "nb_utils.dict.ipynb",
         "flatten_intra": "nb_utils.dict.ipynb",
         "collapse_helper": "nb_utils.dict.ipynb",
         "collapse_once": "nb_utils.dict.ipynb",
         "collapse_all": "nb_utils.dict.ipynb",
         "flatten_inter": "nb_utils.dict.ipynb",
         "load_config_yaml": "nb_utils.general.ipynb",
         "p2t": "nb_utils.general.ipynb",
         "t2p": "nb_utils.general.ipynb",
         "a2p": "nb_utils.general.ipynb",
         "AggregatingHook": "nb_utils.general.ipynb",
         "n_argmin": "nb_utils.general.ipynb",
         "n_argmax": "nb_utils.general.ipynb",
         "state_dicts_equal": "nb_utils.general.ipynb",
         "convert_state_dict": "nb_utils.general.ipynb",
         "custom_save": "nb_utils.general.ipynb",
         "custom_load": "nb_utils.general.ipynb",
         "zip_dir": "nb_utils.general.ipynb"}

modules = ["analysis/binary.py",
           "inference/general.py",
           "projects/robustness_benchmark.py",
           "projects/self_supervised.py",
           "train/balance.py",
           "train/general.py",
           "train/metrics.py",
           "utils/dict.py",
           "utils/general.py"]

doc_url = "https://dbo-dkfz.github.io/scp/"

git_url = "https://github.com/dbo-dkfz/scp/tree/master/"

def custom_doc_links(name): return None
